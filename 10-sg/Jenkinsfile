pipeline {
    agant {
        label 'Agent-1'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    environment {

    }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select apply or destroy')
    }

    stages {
        stage('terraform init and plan') {                
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        cd 10-sg
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }    
        }
        
        stage('terraform apply or destroy') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        cd 10-sg
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve --tfplan
                        elif [ ${params.ACTION} == destroy ]
                        then
                            terraform destroy -auto-approve --tfplan
                        fi
                    """
                }
            }    
        }

        stage('trigger VPC') {
            when {
                expression { params.ACTION == 'destroy'}
            }
            steps {
                build job: '00-vpc', parameters: [choice(name: 'ACTION', value: 'destroy')], wait:true
            }
        }

        stage('parallel triggers'){
            when {
                expression { params.ACTION == 'apply'}
            }
            parallel {
                stage('trigger bastion') {
                    steps {
                        build job: '20-bastion', parameters: [choice(name: 'ACTION', value: 'apply')], wait:false
                    }
                }

                stage('trigger rds'){
                    steps {
                        build job: '30-rds', parameters: [choice(name: 'ACTION', value: 'apply')], wait:false
                    }
                }
                stage('EKS') {
                    steps {
                        build job: '40-eks', parameters: [string(name: 'ACTION', value: "apply")], wait: false
                    }
                }
                
                stage('ECR') {
                    steps {
                        build job: '70-ecr', parameters: [string(name: 'ACTION', value: "apply")], wait: false
                    }
                }
            }

            stage('Sequential') {
            when {
                expression { params.ACTION == 'apply' }
            }
            stages {
                stage('ACM') {
                    steps {
                        build job: '50-acm', parameters: [string(name: 'ACTION', value: "apply")]
                    }
                }
                stage('ALB') {
                    steps {
                        build job: '60-alb', parameters: [string(name: 'ACTION', value: "apply")], wait: false
                    }
                }
                stage('CDN') {
                    steps {
                        build job: '80-cdn', parameters: [string(name: 'ACTION', value: "apply")], wait: false
                    }
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}