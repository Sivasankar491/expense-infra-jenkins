pipeline {
    agent {
        labels 'AGENT-1'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    parameters{
        choice(name: 'ACTION', choices: ['apply', 'destory'], description: "Choose apply or destroy")
    }

    stages {
        stage('terraform init and plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """ 
                        cd 20-bastion
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                    """
                }
            }
        }

        stage('terraform apply or destroy') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        cd 20-bastion
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve --tfplan
                        elif [ ${params.ACTION} == destroy ]
                        then
                            terraform destroy -auto-approve --tfplan
                        fi
                    """
                }
            }
        }
    }

    post {
        always {
            deleteDir()
        }
    }
}